[{"body":"Details coming soon here!\nImplementation Source stored on GitHub here.\n This example is created in TIBCO Flogo® Enterprise 2.8.0 studio.\n ","excerpt":"Details coming soon here!\nImplementation Source stored on GitHub here.\n This example is created in …","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/docs/sample-applications/airline/","title":"Airline"},{"body":"Implementation Sources\n Connector BuildGraph GraphToFile  ","excerpt":"Implementation Sources\n Connector BuildGraph GraphToFile  ","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/docs/components/graphbuilder/","title":"GraphBuilder"},{"body":"soon here \u0026hellip;\n","excerpt":"soon here \u0026hellip;","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/docs/labs/lab-1/","title":"Lab1 - CSV"},{"body":"By using GraphBuilder you are able to build your own application to\n Transform your data to desirded graph structure based upon your graph model. Insert graph into many major graph databases in the marcket (include TIBCO Graph Database, Dgraph, Neo4j and Janusgraph). Query and delete graph data against TIBCO Graph Database  ","excerpt":"By using GraphBuilder you are able to build your own application to\n Transform your data to desirded …","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/docs/overview/","title":"Overview"},{"body":" Download latest TIBCO Flogo Enterprise from here here Download GraphBuilder user extensions here import GraphBuilder user extensions to TIBCO Flogo Enterprise studio. Enjoy it!  ","excerpt":" Download latest TIBCO Flogo Enterprise from here here Download GraphBuilder user extensions here …","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/docs/getting-started/","title":"Getting Started"},{"body":"Details coming soon here!\nImplementation Source stored on GitHub here.\n This example is created in TIBCO Flogo® Enterprise 2.8.0 studio.\n ","excerpt":"Details coming soon here!\nImplementation Source stored on GitHub here.\n This example is created in …","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/docs/sample-applications/hierachy/","title":"Hierachy"},{"body":"soon here \u0026hellip;\n","excerpt":"soon here \u0026hellip;","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/docs/labs/lab-2/","title":"Lab2 - Query"},{"body":"Implementation Sources\n Connector TGDBUpsert TGDBQuery TGDBDelete  ","excerpt":"Implementation Sources\n Connector TGDBUpsert TGDBQuery TGDBDelete  ","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/docs/components/graphbuilder-tgdb/","title":"TGDB"},{"body":"Implementation Sources\n Connector DgraphUpsert DgraphQuery  ","excerpt":"Implementation Sources\n Connector DgraphUpsert DgraphQuery  ","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/docs/components/graphbuilder-dgraph/","title":"Dgraph"},{"body":"Details coming soon here!\nImplementation Source stored on GitHub here.\n This example is created in TIBCO Flogo® Enterprise 2.8.0 studio.\n ","excerpt":"Details coming soon here!\nImplementation Source stored on GitHub here.\n This example is created in …","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/docs/sample-applications/iot-data-consumer/","title":"IoT Data Consumer"},{"body":"soon here \u0026hellip;\n","excerpt":"soon here \u0026hellip;","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/docs/labs/lab-3/","title":"Lab3 - real-time"},{"body":"try our Labs\n","excerpt":"try our Labs","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/docs/labs/","title":"Labs"},{"body":"Implementation Sources\n Connector BuildGraph GraphToFile  ","excerpt":"Implementation Sources\n Connector BuildGraph GraphToFile  ","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/docs/components/","title":"Components"},{"body":"This example uses Meetup open event through Meetup API see https://www.meetup.com/meetup_api/\nCreate Graph Model Setting  Graph Name: -\u0026gt; Meetup Model Source: -\u0026gt; Select Local File Graph Model: -\u0026gt; Select sample-applications/Meetup_Event/Model_Meetup.json  Create Connection for subscribing Meetup open event Setting  Connection Name: -\u0026gt; Meetup_Event Outbound: -\u0026gt; Sellect \u0026ldquo;true\u0026rdquo; for connecting to Meetup service Server URL: -\u0026gt; http://stream.meetup.com/ Resource Name: -\u0026gt; 2/open_events Access Token: -\u0026gt; not required for accessing open event  Create Connection for serving streaming graph data Setting  Connection Name: -\u0026gt; EventServer Outbound: -\u0026gt; select \u0026ldquo;false\u0026rdquo; since it's a server Server port: -\u0026gt; any available port (8888 for this example) Path: -\u0026gt; /sse/ (client connect http://[host]:[port]/sse/meetup to subscribe \u0026ldquo;meetup\u0026rdquo; graph stream)  Create GraphModel for Enriching Meetup Graph Setting  Graph Name: -\u0026gt; GeographyInfo Model Source: -\u0026gt; Select Local File Graph Model: -\u0026gt; Select sample-applications/Meetup_Event/Model_GeographyInfo.json  Create Application Create Flow for consuming Meetup open event Configure flow inputs and outputs  input sample  {\r\u0026quot;EventString\u0026quot; : \u0026quot;\u0026quot;\r}\rAdd Activity 1 Select GraphBuilder_Tools -\u0026gt; JSONDeserializer\n JSON Data Sample: -\u0026gt; Select sample-applications/Meetup_Event/.json Default Values: -\u0026gt; Set \u0026ldquo;na\u0026rdquo; as default for venue.address_1, category.name  Add Activity 2 Select GraphBuilder_Builder -\u0026gt; BuildGraph\n Graph Model: -\u0026gt; Select \u0026ldquo;Meetup\u0026rdquo; (the connection we created previously) Configure Model: -\u0026gt; Map attributes to input data fields (for nodes and edges)  Add Activity 3-1 Select GraphBuilder_SSE -\u0026gt; SSEEndPoint\n SSE Connection: -\u0026gt; Select \u0026ldquo;EventServer\u0026rdquo; for serving streaming data(the connection we created previously) Avtivity Input 1: set StreamId to \u0026ldquo;meetup\u0026rdquo; (the resource name for client to subscribe) Avtivity Input 2: map required Data object to $activity[BuildGraph].Graph (output of BuildGraph activity)  Add Activity 3-2 Select GraphBuilder_TGDB -\u0026gt; TGDBUpsert\n TGDB Connection: -\u0026gt; Select \u0026ldquo;TGDB\u0026rdquo; for upserting streaming data to TGDB(the connection we created in TGDB_RESTful_Service sample application) Avtivity Input 1: set required Graph object to $activity[BuildGraph].Graph  Add a trigger Select GraphBuilder_SSE -\u0026gt; SSESubscriber\n SSE Connection(outbound request): -\u0026gt; Select \u0026ldquo;Meetup_Event\u0026rdquo; for consuming open event from Meetup web site Flow Input: -\u0026gt; Map EventString to $trigger.Event (This is the output of SSESubscriber)  Create Flow for Serving Streaming Graph Data Configure flow inputs and outputs No configuration is required here since the data flow comes from SSEEndPoint of Meetup Event Flow directly\nAdd a trigger GraphBuilder_SSE -\u0026gt; SSESubscriber\n  SSE Connection(inbound requests): -\u0026gt; Select \u0026ldquo;EventServer\u0026rdquo; for serving streaming data(so now SSEEndPoint connected)\n  Flow Input: -\u0026gt; Map EventString to $trigger.Event (This is the output of SSESubscriber)\n  Incoming Query\n  HTTP GET with resource path /sse/{streamId}\n reply  $flow.queryResult\nsample :\n{\r\u0026quot;graph\u0026quot;:{\r\u0026quot;edges\u0026quot;:{},\r\u0026quot;id\u0026quot;:\u0026quot;GeographyInfo\u0026quot;,\r\u0026quot;model\u0026quot;:{\r\u0026quot;edges\u0026quot;:{\r\u0026quot;attrTypeMap\u0026quot;:{\u0026quot;in_Continent\u0026quot;:{}},\r\u0026quot;directionMap\u0026quot;:{\u0026quot;in_Continent\u0026quot;:1},\r\u0026quot;keyMap\u0026quot;:{\u0026quot;in_Continent\u0026quot;:null},\r\u0026quot;types\u0026quot;:[\u0026quot;in_Continent\u0026quot;],\r\u0026quot;vertexes\u0026quot;:{\u0026quot;in_Continent\u0026quot;:[\u0026quot;City\u0026quot;,\u0026quot;Continent\u0026quot;]}\r},\r\u0026quot;nodes\u0026quot;:{\r\u0026quot;attrTypeMap\u0026quot;:{\u0026quot;Continent\u0026quot;:{\u0026quot;Name\u0026quot;:\u0026quot;String\u0026quot;},\u0026quot;Country\u0026quot;:{\u0026quot;Country_Code\u0026quot;:\u0026quot;String\u0026quot;}},\r\u0026quot;keyMap\u0026quot;:{\u0026quot;Continent\u0026quot;:[\u0026quot;Name\u0026quot;],\u0026quot;Country\u0026quot;:[\u0026quot;Country_Code\u0026quot;]},\u0026quot;types\u0026quot;:[\u0026quot;Country\u0026quot;,\u0026quot;Continent\u0026quot;]\r}\r},\r\u0026quot;modelId\u0026quot;:\u0026quot;GeographyInfo\u0026quot;,\r\u0026quot;nodes\u0026quot;:{\r\u0026quot;Continent_0ecff3229a1a13980689def44b2c66e1\u0026quot;:{\r\u0026quot;attributes\u0026quot;:{\u0026quot;Name\u0026quot;:{\u0026quot;name\u0026quot;:\u0026quot;Name\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;String\u0026quot;,\u0026quot;value\u0026quot;:\u0026quot;North_America\u0026quot;}},\r\u0026quot;key\u0026quot;:[\u0026quot;North_America\u0026quot;],\r\u0026quot;keyAttributeName\u0026quot;:[\u0026quot;Name\u0026quot;],\r\u0026quot;type\u0026quot;:\u0026quot;Continent\u0026quot;\r},\r\u0026quot;Country_5181a8acdef7be40dfbf3ec66bee2b20\u0026quot;:{\r\u0026quot;attributes\u0026quot;:{\u0026quot;Country_Code\u0026quot;:{\u0026quot;name\u0026quot;:\u0026quot;Country_Code\u0026quot;,\u0026quot;type\u0026quot;:\u0026quot;String\u0026quot;,\u0026quot;value\u0026quot;:\u0026quot;us\u0026quot;}},\r\u0026quot;key\u0026quot;:[\u0026quot;us\u0026quot;],\r\u0026quot;keyAttributeName\u0026quot;:[\u0026quot;Country_Code\u0026quot;],\r\u0026quot;type\u0026quot;:\u0026quot;Country\u0026quot;\r}\r}\r}\r}\rCreate Flow for Enriching Meetup Graph Configure flow inputs and outputs  input sample  {\r\u0026quot;Continent\u0026quot;: {\r\u0026quot;Name\u0026quot;: \u0026quot;North_America\u0026quot;,\r\u0026quot;Countries\u0026quot;: [\r\u0026quot;us\u0026quot;\r]\r}\r}\rAdd Activity 1 Select GraphBuilder_Builder -\u0026gt; BuildGraph\n Graph Model: -\u0026gt; Select \u0026ldquo;GeographyInfo\u0026rdquo; (the connection we created previously) Configure Model: -\u0026gt; Map attributes to input data fields (for nodes and edges)  Add Activity 2 Select GraphBuilder_SSE -\u0026gt; SSEEndPoint\n SSE Connection: -\u0026gt; Select \u0026ldquo;EventServer\u0026rdquo; for serving streaming data(the connection we created previously) Avtivity Input 1: set StreamId to \u0026ldquo;GeographyInfo\u0026rdquo; (the resource name for client to subscribe) Avtivity Input 2: map required Data object to $activity[BuildGraph].Graph (output of BuildGraph activity)  Add a trigger (Receive HTTP Message)   Setting1: Set Port to any available one (in this sample 9998)\n  Setting2: Set Method to \u0026ldquo;POST\u0026rdquo;\n  Setting3: Set Path to \u0026ldquo;/geography/{Continent}\u0026rdquo;\n  Output Setting\n  $trigger.pathParams.Continent and $trigger.body\nbody sample :\n{\r\u0026quot;Countries\u0026quot;: [\r\u0026quot;us\u0026quot;\r]\r}\r Flow Input1: Continent.Name map to $trigger.pathParams.Continent Flow Input2: Continent.Countries map to $trigger.body.Countries  Implementation Source stored on GitHub here.\n This example is created in TIBCO Flogo® Enterprise 2.8.0 studio.\n ","excerpt":"This example uses Meetup open event through Meetup API see https://www.meetup.com/meetup_api/\nCreate …","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/docs/sample-applications/meetup-event/","title":"Meetup Event"},{"body":"Implementation Sources\n Connector Neo4jUpsert  ","excerpt":"Implementation Sources\n Connector Neo4jUpsert  ","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/docs/components/graphbuilder-neo4j/","title":"Neo4j"},{"body":"Project Graph Builder offers an easy and powerful way of loading data from multiple enterprise data sources into TIBCO® Graph Database in real time to leverage the power of all the business insights that are captured in your data.\nPutting the relationships within your data at the forefront allows you to traverse and understand complex relationships within your business model. Storing data in a graph model allows you to convert complex dynamic data into meaningful business insights.\n","excerpt":"Project Graph Builder offers an easy and powerful way of loading data from multiple enterprise data …","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/docs/sample-applications/","title":"Sample Applications"},{"body":"Implementation Sources\n Connector JanusgraphUpsert  ","excerpt":"Implementation Sources\n Connector JanusgraphUpsert  ","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/docs/components/graphbuilder-gremlin/","title":"Gremlin"},{"body":"Create TGDB Connection Create Application Create Flow for querying Metadata Configure flow inputs and outputs  input sample  {\r\u0026quot;queryType\u0026quot; : \u0026quot;\u0026quot;\r}\r output sample  {\r\u0026quot;queryResult\u0026quot;: {\r\u0026quot;content\u0026quot;: {},\r\u0026quot;success\u0026quot;: true,\r\u0026quot;error\u0026quot;: {\r\u0026quot;code\u0026quot;: 101,\r\u0026quot;message\u0026quot;: \u0026quot;Not found\u0026quot;\r}\r}\r}\rAdd activities   Activity 1 : GraphBuilder_TGDB -\u0026gt; TGDBQuery\n  Activity 2 : Default -\u0026gt; Return\n  Add a trigger (Receive HTTP Message)  output  $trigger.pathParams.queryType\n reply  $flow.queryResult\nsample :\n{\r\u0026quot;queryResult\u0026quot;: {\r\u0026quot;content\u0026quot;: {},\r\u0026quot;success\u0026quot;: true,\r\u0026quot;error\u0026quot;: {\r\u0026quot;code\u0026quot;: 101,\r\u0026quot;message\u0026quot;: \u0026quot;Not found\u0026quot;\r}\r}\r}\rCreate Flow for Querying Data Configure flow inputs and outputs  input sample  {\r\u0026quot;queryType\u0026quot; : \u0026quot;\u0026quot;,\r\u0026quot;language\u0026quot;: \u0026quot;\u0026quot;,\r\u0026quot;queryString\u0026quot;: \u0026quot;\u0026quot;,\r\u0026quot;traversalCondition\u0026quot;: \u0026quot;\u0026quot;,\r\u0026quot;endCondition\u0026quot;: \u0026quot;\u0026quot;,\r\u0026quot;traversalDepth\u0026quot;: 1\r}\r output sample  {\r\u0026quot;queryResult\u0026quot;: {\r\u0026quot;content\u0026quot;: {},\r\u0026quot;success\u0026quot;: true,\r\u0026quot;error\u0026quot;: {\r\u0026quot;code\u0026quot;: 101,\r\u0026quot;message\u0026quot;: \u0026quot;Not found\u0026quot;\r}\r}\r}\rAdd activities   Activity 1 : GraphBuilder_TGDB -\u0026gt; TGDBQuery\n  Activity 2 : Default -\u0026gt; Return\n  Add a trigger (Receive HTTP Message)  output  $trigger.pathParams.queryType and $trigger.body\nsample :\n{\r\u0026quot;query\u0026quot;: {\r\u0026quot;language\u0026quot; : \u0026quot;tgql\u0026quot;,\r\u0026quot;queryString\u0026quot; : \u0026quot;@nodetype = 'houseMemberType' and memberName = 'Napoleon Bonaparte';\u0026quot;,\r\u0026quot;traversalCondition\u0026quot; : \u0026quot;@edgetype = 'relation' and relation = 'spouse' and @isfromedge = 1 and @degree = 1;\u0026quot;,\r\u0026quot;endCondition\u0026quot; : \u0026quot;\u0026quot;,\r\u0026quot;traversalDepth\u0026quot; : 1\r}\r}\r reply  $flow.queryResult\nsample :\n{\r\u0026quot;queryResult\u0026quot;: {\r\u0026quot;content\u0026quot;: {},\r\u0026quot;success\u0026quot;: true,\r\u0026quot;error\u0026quot;: {\r\u0026quot;code\u0026quot;: 101,\r\u0026quot;message\u0026quot;: \u0026quot;Not found\u0026quot;\r}\r}\r}\rImplementation Source stored on GitHub here.\n This example is created in TIBCO Flogo® Enterprise 2.8.0 studio.\n ","excerpt":"Create TGDB Connection Create Application Create Flow for querying Metadata Configure flow inputs …","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/docs/sample-applications/restful-service/","title":"RESTful Service"},{"body":"Implementation Sources\n Connector SSEEndpoint SSEServer SSESubscriber  ","excerpt":"Implementation Sources\n Connector SSEEndpoint SSEServer SSESubscriber  ","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/docs/components/graphbuilder-sse/","title":"SSE"},{"body":"Implementation Sources\n Connector FileReader Accumulator CSVFileWriter CSVParser JsonDataDecoupler JsonDeserializer JsonParser CSVParser JsonDataDecoupler JsonDeserializer TableQuery TableUpsert  ","excerpt":"Implementation Sources\n Connector FileReader Accumulator CSVFileWriter CSVParser JsonDataDecoupler …","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/docs/components/graphbuilder-tools/","title":"Tools"},{"body":"This section is where the user documentation for TIBCO LABS™ Project GraphBuilder - all the information you need to understand this project.\n","excerpt":"This section is where the user documentation for TIBCO LABS™ Project GraphBuilder - all the …","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/docs/","title":"Documentation"},{"body":"","excerpt":"","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/index.json","title":""},{"body":" \r#td-cover-block-0 {\rbackground-image: url(/labs-graphbuilder-contrib/about/featured-background_hud062541b21b90529446eee6001de80cd_8365555_960x540_fill_q75_catmullrom_bottom.jpg); }\r@media only screen and (min-width: 1200px) {\r#td-cover-block-0 {\rbackground-image: url(/labs-graphbuilder-contrib/about/featured-background_hud062541b21b90529446eee6001de80cd_8365555_1920x1080_fill_q75_catmullrom_bottom.jpg); }\r}\r\rProject Graph Builder by TIBCO LABS™\rabc line 1 abc line 2 -- \r\r\r\r\r\r\rMore Details about the underlying Product here TIBCO® Graph Database Wiki, on \r\r\r\r\rTIBCO LABS™ is a program designed to provide customers and partners with a mechanism for actively participating in TIBCO’s history of innovation. TIBCO has always been at the forefront of innovation, and TIBCO LABS™ allows participants to share in this history by collaboratively building solutions to today’s challenging problems, previewing new capabilities, and accessing emerging technologies in areas such as blockchain, AI / ML and IoT. Through TIBCO LABS™, customers and partners can gain insight into TIBCO’s innovation activities, participate in shaping the form of these activities in the years to come, and benefit from TIBCO’s leadership position in integration and analytics. \n    \n \r\r \rBSD 3-Clause License  Copyright © 2020 TIBCO Software Inc. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n  Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n  Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n  Neither the name of TIBCO Software Inc. nor the names of any contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT OWNER AND CONTRIBUTORS \u0026ldquo;AS IS\u0026rdquo; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n \r\r ","excerpt":"#td-cover-block-0 {\rbackground-image: …","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/about/","title":"About Project Graph Builder"},{"body":"","excerpt":"","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/community/","title":"Community"},{"body":"\r\r#td-cover-block-0 {\rbackground-image: url(/labs-graphbuilder-contrib/featured-background_hud062541b21b90529446eee6001de80cd_8365555_960x540_fill_q75_catmullrom_top.jpg); }\r@media only screen and (min-width: 1200px) {\r#td-cover-block-0 {\rbackground-image: url(/labs-graphbuilder-contrib/featured-background_hud062541b21b90529446eee6001de80cd_8365555_1920x1080_fill_q75_catmullrom_top.jpg); }\r}\r\rProject GraphBuilder\rLearn More \r\rDownload \r\rLeveraging the power of relationships in your data\n\n\r\r\r\r\r\r\r\rProject GraphBuilder by TIBCO LABS™\nThe application of graph analytics keeps growing in the market and it is becoming more relevant in today's world. The need to continuously accelerate the data ingestion into graph models to enable fast analysis of complex interrelationships in the data sometimes can be hard to meet. Project Graph Builder by TIBCO LABS™ addresses these challenges by providing an easy and powerful way to load data into TIBCO® Graph Database.\n\r\r\r\r\r\rOverview\rBusiness use case, followed by the Proposed of the Solution.\nRead more …\n\r\r\rKey Components\rLearn more about the used TIBCO Products and Assets.\nRead more …\n\r\r\rGet Started\rFollow the documentation, and start today !\nRead more …\n\r\r\r--\r\r\r\r\r\r\rContact us!\rReach us for more details, or engage us today !\nRead more …\n\r\r\rContributions welcome!\rWe do a Pull Request contributions workflow on GitHub. New users are always welcome!\nRead more …\n\r--\r\r\rFollow us on Twitter!\rFor announcement of latest features etc\u0026hellip;\nRead more …\n\r\r\r\r","excerpt":"#td-cover-block-0 {\rbackground-image: …","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/","title":"Project Graph Builder"},{"body":"","excerpt":"","ref":"https://tibcosoftware.github.io/labs-graphbuilder-contrib/search/","title":"Search Results"}]